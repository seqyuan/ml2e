name: Release with Docker

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            goos: linux
            goarch: amd64
            docker-image: golang:1.22-alpine
            binary-name: patternqc
          - os: linux
            arch: arm64
            goos: linux
            goarch: arm64
            docker-image: golang:1.22-alpine
            binary-name: patternqc
          - os: windows
            arch: amd64
            goos: windows
            goarch: amd64
            docker-image: golang:1.22-windowsservercore
            binary-name: patternqc.exe
          - os: darwin
            arch: amd64
            goos: darwin
            goarch: amd64
            docker-image: golang:1.22-alpine
            binary-name: patternqc
          - os: darwin
            arch: arm64
            goos: darwin
            goarch: arm64
            docker-image: golang:1.22-alpine
            binary-name: patternqc

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build with Docker
      run: |
        docker run --rm -v "$PWD:/app" -w /app ${{ matrix.docker-image }} sh -c "
          apk add --no-cache gcc musl-dev
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}
          export CGO_ENABLED=0
          go mod download
          go mod verify
          go build -v -ldflags='-s -w -extldflags=-static' -o patternqc-${{ matrix.os }}-${{ matrix.arch }} patternqc.go
        "

    - name: Test binary
      if: matrix.os == 'linux'
      run: |
        docker run --rm -v "$PWD:/app" -w /app alpine:latest sh -c "
          chmod +x patternqc-${{ matrix.os }}-${{ matrix.arch }}
          ./patternqc-${{ matrix.os }}-${{ matrix.arch }} -version
          ./patternqc-${{ matrix.os }}-${{ matrix.arch }} 2>&1 | grep -q 'Error: -fq1, -fq2 and -outdir are required' || exit 1
        "

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: patternqc-${{ matrix.os }}-${{ matrix.arch }}
        path: patternqc-${{ matrix.os }}-${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          patternqc-linux-amd64/patternqc-linux-amd64
          patternqc-linux-arm64/patternqc-linux-arm64
          patternqc-windows-amd64/patternqc-windows-amd64
          patternqc-darwin-amd64/patternqc-darwin-amd64
          patternqc-darwin-arm64/patternqc-darwin-arm64
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
